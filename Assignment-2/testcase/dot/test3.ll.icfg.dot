digraph "ICFG" {
	label="ICFG";

	Node0x7fa8e472b630 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n ptr null \{ constant data \}\nAddrStmt: [Var26 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var12 \<-- Var3]  \n i32 1 \{ constant data \}\nAddrStmt: [Var22 \<-- Var3]  \n i32 2 \{ constant data \}\nAddrStmt: [Var4 \<-- Var5]  \nFunction: test \nAddrStmt: [Var16 \<-- Var17]  \nFunction: svf_assert \nAddrStmt: [Var29 \<-- Var30]  \nFunction: main }"];
	Node0x7fa8e472b630 -> Node0x7fa8e4723cd0[style=solid];
	Node0x7fa8e471e980 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: test\}}"];
	Node0x7fa8e471e980 -> Node0x7fa8e472de10[style=solid];
	Node0x7fa8e472de10 [shape=record,color=black,label="{IntraICFGNode2 \{fun: test\}\nCmpStmt: [Var9 \<-- (Var7 predicate38 Var8)]  \n   %cmp = icmp sgt i32 %a, %b }"];
	Node0x7fa8e472de10 -> Node0x7fa8e471eba0[style=solid];
	Node0x7fa8e471eba0 [shape=record,color=black,label="{IntraICFGNode3 \{fun: test\}\nBranchStmt: [Condition Var9]\nSuccessor 0 ICFGNode4   Successor 1 ICFGNode5   \n   br i1 %cmp, label %if.then, label %if.else }"];
	Node0x7fa8e471eba0 -> Node0x7fa8e472b2b0[style=solid];
	Node0x7fa8e471eba0 -> Node0x7fa8e472bcb0[style=solid];
	Node0x7fa8e472b2b0 [shape=record,color=black,label="{IntraICFGNode4 \{fun: test\}\nBinaryOPStmt: [Var11 \<-- (Var12 opcode13 Var12)]  \n   %inc = add nsw i32 1, 1 }"];
	Node0x7fa8e472b2b0 -> Node0x7fa8e472b960[style=solid];
	Node0x7fa8e472bcb0 [shape=record,color=black,label="{IntraICFGNode5 \{fun: test\}\nBinaryOPStmt: [Var20 \<-- (Var12 opcode13 Var12)]  \n   %inc3 = add nsw i32 1, 1 }"];
	Node0x7fa8e472bcb0 -> Node0x7fa8e4707760[style=solid];
	Node0x7fa8e472b960 [shape=record,color=black,label="{IntraICFGNode6 \{fun: test\}\nBinaryOPStmt: [Var13 \<-- (Var12 opcode13 Var12)]  \n   %inc1 = add nsw i32 1, 1 }"];
	Node0x7fa8e472b960 -> Node0x7fa8e470e8a0[style=solid];
	Node0x7fa8e4707760 [shape=record,color=black,label="{IntraICFGNode7 \{fun: test\}\nCmpStmt: [Var21 \<-- (Var20 predicate32 Var22)]  \n   %cmp4 = icmp eq i32 %inc3, 2 }"];
	Node0x7fa8e4707760 -> Node0x7fa8e4708600[style=solid];
	Node0x7fa8e470e8a0 [shape=record,color=black,label="{IntraICFGNode8 \{fun: test\}\nCmpStmt: [Var14 \<-- (Var11 predicate32 Var13)]  \n   %cmp2 = icmp eq i32 %inc, %inc1 }"];
	Node0x7fa8e470e8a0 -> Node0x7fa8e47262a0[style=solid];
	Node0x7fa8e4708600 [shape=record,color=red,label="{CallICFGNode9 \{fun: test\}}"];
	Node0x7fa8e4708600 -> Node0x7fa8e4722b50[style=solid];
	Node0x7fa8e4722b50 [shape=record,color=blue,label="{RetICFGNode10 \{fun: test\}}"];
	Node0x7fa8e4722b50 -> Node0x7fa8e4726590[style=solid];
	Node0x7fa8e47262a0 [shape=record,color=red,label="{CallICFGNode11 \{fun: test\}}"];
	Node0x7fa8e47262a0 -> Node0x7fa8e4726810[style=solid];
	Node0x7fa8e4726810 [shape=record,color=blue,label="{RetICFGNode12 \{fun: test\}}"];
	Node0x7fa8e4726810 -> Node0x7fa8e4729450[style=solid];
	Node0x7fa8e4726590 [shape=record,color=black,label="{IntraICFGNode13 \{fun: test\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode15   \n   br label %if.end }"];
	Node0x7fa8e4726590 -> Node0x7fa8e47291d0[style=solid];
	Node0x7fa8e4729450 [shape=record,color=black,label="{IntraICFGNode14 \{fun: test\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode15   \n   br label %if.end }"];
	Node0x7fa8e4729450 -> Node0x7fa8e47291d0[style=solid];
	Node0x7fa8e47291d0 [shape=record,color=black,label="{IntraICFGNode15 \{fun: test\}\n   ret i32 0 }"];
	Node0x7fa8e47291d0 -> Node0x7fa8e4723d90[style=solid];
	Node0x7fa8e4723d90 [shape=record,color=green,label="{FunExitICFGNode16 \{fun: test\}\nPhiStmt: [Var6 \<-- ([Var26, ICFGNode15],)]  \n   ret i32 0 |{<s0>0x7fa8e472d0b0}}"];
	Node0x7fa8e4723d90:s0 -> Node0x7fa8e4724310[style=solid,color=blue];
	Node0x7fa8e4723cd0 [shape=record,color=yellow,label="{FunEntryICFGNode17 \{fun: main\}}"];
	Node0x7fa8e4723cd0 -> Node0x7fa8e47241d0[style=solid];
	Node0x7fa8e47241d0 [shape=record,color=red,label="{CallICFGNode18 \{fun: main\}\nCallPE: [Var7 \<-- Var12]  \n   %call = call i32 @test(i32 noundef 1, i32 noundef 2) \nCallPE: [Var8 \<-- Var22]  \n   %call = call i32 @test(i32 noundef 1, i32 noundef 2) |{<s0>0x7fa8e472d0b0}}"];
	Node0x7fa8e47241d0:s0 -> Node0x7fa8e471e980[style=solid,color=red];
	Node0x7fa8e4724310 [shape=record,color=blue,label="{RetICFGNode19 \{fun: main\}\nRetPE: [Var32 \<-- Var6]  \n   %call = call i32 @test(i32 noundef 1, i32 noundef 2) }"];
	Node0x7fa8e4724310 -> Node0x7fa8e47296d0[style=solid];
	Node0x7fa8e47296d0 [shape=record,color=black,label="{IntraICFGNode20 \{fun: main\}\n   ret i32 0 }"];
	Node0x7fa8e47296d0 -> Node0x7fa8e47297f0[style=solid];
	Node0x7fa8e47297f0 [shape=record,color=green,label="{FunExitICFGNode21 \{fun: main\}\nPhiStmt: [Var31 \<-- ([Var26, ICFGNode20],)]  \n   ret i32 0 }"];
}
